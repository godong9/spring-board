buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

task generateJavadoc(type: Javadoc) {
	options.addStringOption("locale","ko_KR")
	options.addStringOption("encoding","UTF-8")
	options.addStringOption("charset","UTF-8")
	options.addStringOption("docencoding","UTF-8")

	source = sourceSets.main.allJava
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-tomcat')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('mysql:mysql-connector-java')
	compile('org.springframework.session:spring-session-jdbc')

	compile('org.projectlombok:lombok')
	compile('com.google.guava:guava:21.0')
	compile('org.apache.commons:commons-lang3:3.5')
	compile('org.modelmapper.extensions:modelmapper-spring:0.7.5')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}
